name: PR-CYCLE

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - develop

env:
  ENTANDO_OPT_USE_PPL_TAG: "v1.0.2"
  ENTANDO_OPT_FEATURES: "*"
  ENTANDO_OPT_LOG_LEVEL: "TRACE"
  ENTANDO_OPT_REPO_BOM_URL: ${{ secrets.ENTANDO_OPT_REPO_BOM_URL }}
  GIT_USER_NAME: "Entando Bot"
  GIT_USER_EMAIL: "entando-bot@entando.com"
  PPL_CONTEXT: ${{ toJson(github) }}
  LOCAL_CLONE_DIR: "local-checkout"


jobs:
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # PREPARE
  
  prepare:
    runs-on: ubuntu-latest
    outputs:
      ENABLE_SONAR_SCAN: ${{ steps.CHECKS.outputs.ENABLE_SONAR_SCAN }}
      ENABLE_SNYK_SCAN: ${{ steps.CHECKS.outputs.ENABLE_SNYK_SCAN }}
      ENABLE_OWASP_SCAN: ${{ steps.CHECKS.outputs.ENABLE_SCAN }}
    steps:
      #~
      - name: "PR PIPELINE START"
        run: |
          ${{ secrets.ENTANDO_OPT_PPL_INSTALL_CMD }}
          ~/ppl-run \
            .. status-report \
            .. @pr-labels remove "prepared" --id "REMOVE-LABEL-PREPARED" \
            .. @gate-check "SONAR-SCAN" "SNYK-SCAN" "OWASP-SCAN"  \
            ;
            
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # FULL-BUILD
  
  full-build:
    needs: [ 'prepare' ]
    runs-on: ubuntu-latest
    steps:
      #~ CHECKOUT
      - name: "CHECKOUT"
        run: |
          ${{ secrets.ENTANDO_OPT_PPL_INSTALL_CMD }}
          ~/ppl-run checkout-branch pr --lcd "$LOCAL_CLONE_DIR"

          echo "BUILD_CACHE_KEY=$( sha256sum "$LOCAL_CLONE_DIR/pom.xml" --zero | cut -d' ' -f1 )" >> $GITHUB_ENV
      #~ JDK
      - name: "Set up JDK 11"
        uses: actions/setup-java@v1
        with:
          java-version: 11
      #~ MAVEN CACHE
      - name: "Cache Maven packages"
        id: maven-cache
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2
          restore-keys: ${{ runner.os }}-m2
      #~ BUILD CACHE
      - name: "Cache Build Dir"
        id: build-cache
        uses: actions/cache@v2
        with:
          path: "${{ env.LOCAL_CLONE_DIR}}/target/"
          key: ${{ runner.os }}-build-${{ env.BUILD_CACHE_KEY }}
      #~ BUILD
      - name: "FULL BUILD"
        run: |
          ~/ppl-run \
            .. mvn FULL-BUILD --lcd "$LOCAL_CLONE_DIR" \
            .. release prepare-preview-release --lcd "$LOCAL_CLONE_DIR" \
          ;

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # SCANS
  scans:
    needs: [ 'full-build' ]
    env:
      SNYK_ORG: "entando-ixc"
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        scan-type: [ 'SONAR', "OWASP", "SNYK" ]
      
    steps:
      #~ CHECKOUT
      - name: "CHECKOUT"
        run: |
          ${{ secrets.ENTANDO_OPT_PPL_INSTALL_CMD }}
          ~/ppl-run checkout-branch pr --lcd "$LOCAL_CLONE_DIR"
          
          echo "BUILD_CACHE_KEY=$( sha256sum "$LOCAL_CLONE_DIR/pom.xml" --zero | cut -d' ' -f1 )" >> $GITHUB_ENV
      #~ JDK
      - name: "Set up JDK 11"
        uses: actions/setup-java@v1
        with:
          java-version: 11
      #~ MAVEN CACHE
      - name: "Cache Maven packages"
        id: maven-cache
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2
          restore-keys: ${{ runner.os }}-m2
      #~ BUILD CACHE
      - name: "Cache Build Dir"
        id: build-cache
        uses: actions/cache@v2
        with:
          path: "${{ env.LOCAL_CLONE_DIR}}/target/"
          key: ${{ runner.os }}-build-${{ env.BUILD_CACHE_KEY }}
      #~ BUILD
      - name: "DEBUG"
        if: ${{ env.ENTANDO_OPT_ENABLE_DEBUG_STEP == 'true' }}
        run: |
          (
            echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
            echo "MC: ${{ steps.maven-cache.outputs.cache-hit }}"
            echo "BC: ${{ steps.build-cache.outputs.cache-hit }}"
            echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
            echo "BUILD CACHE INFO: ${{ env.LOCAL_CLONE_DIR}}/target/"
            echo "BUILD CACHE INFO: ${{ env.BUILD_CACHE_KEY}}"
            echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
            ls -l
            echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
            ls -l "$LOCAL_CLONE_DIR"
            echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
            ls -l "${{ env.LOCAL_CLONE_DIR}}/target/"
            echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
          ) || true
      - name: "Run the Scan"
        run: |
          SCAN_TYPE="${{ matrix.scan-type }}"
          ID="$SCAN_TYPE-SCAN"
          
          case "$SCAN_TYPE" in
            OWASP)
              ~/ppl-run mvn "$SCAN_TYPE" --id "$ID" --lcd "$LOCAL_CLONE_DIR"
              ;;
            SONAR)
              export SONAR_TOKEN="${{ secrets.SONAR_TOKEN }}"
              ~/ppl-run mvn "$SCAN_TYPE" --id "$ID" --lcd "$LOCAL_CLONE_DIR"
              ;;
            SNYK)
              export SNYK_TOKEN="${{ secrets.SNYK_TOKEN }}"
              ~/ppl-run scan snyk --org "$SNYK_ORG" --id "$ID" --lcd "$LOCAL_CLONE_DIR"
              ;;
          esac
          
      - name: "Clean SKIP-SNYK"
        if: steps.GATE.outputs.ENABLED != 'true'
        run: |
          ~/ppl-run @pr-labels remove "skip-${SCAN_TYPE,,}" --id "CLEAN-SKIP-${SCAN_TYPE}"
